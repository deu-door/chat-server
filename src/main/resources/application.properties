# Server properties
server.address = 0.0.0.0
server.port = 8000

# MySQL properties
server.mysql.host = ${MYSQL_HOST}
server.mysql.database = ${MYSQL_DATABASE}
server.mysql.username = ${MYSQL_USER}
server.mysql.password = ${MYSQL_PASSWORD}

# Kafka properties
server.kafka.host = ${KAFKA_HOST}
server.kafka.group-id = ${KAFKA_GROUP_ID}

# API 호출 시, SQL 문을 콘솔에 출력
spring.jpa.show-sql = true

# DDL 정의 시 데이터베이스의 고유 기능을 사용
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl = true

# MySQL 사용
spring.jpa.database = mysql

# MySQL 설정
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://${server.mysql.host}/${server.mysql.database}?useSSL=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username = ${server.mysql.username}
spring.datasource.password = ${server.mysql.password}

logging.level.org.apache.http.wire=DEBUG

# Auth 사용 여부
auth.enable = false

# JWT Secret key
auth.secret-key=secret

# JWT 토큰 헤더
auth.token-header=Authorization
